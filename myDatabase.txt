-- Create a new database
CREATE DATABASE my_database;

-- Use the newly created database
USE my_database;

-- Create a new table
CREATE TABLE employees (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100) UNIQUE,
    hire_date DATE,
    salary DECIMAL(10, 2)
);

-- Insert a single row into the employees table
INSERT INTO employees (first_name, last_name, email, hire_date, salary)
VALUES ('John', 'Doe', 'john.doe@example.com', '2023-01-15', 55000.00);

-- Insert multiple rows into the employees table
INSERT INTO employees (first_name, last_name, email, hire_date, salary)
VALUES 
('Jane', 'Smith', 'jane.smith@example.com', '2022-12-01', 60000.00),
('Alice', 'Johnson', 'alice.johnson@example.com', '2021-10-10', 70000.00);

-- Select all columns and rows from the employees table
SELECT * FROM employees;

-- Select specific columns from the employees table
SELECT first_name, last_name, email FROM employees;

-- Select rows based on a condition
SELECT * FROM employees WHERE salary > 60000;

-- Update the salary of an employee
UPDATE employees
SET salary = 65000.00
WHERE employee_id = 1;

-- Update multiple columns of an employee
UPDATE employees
SET email = 'john.doe@newdomain.com', salary = 67000.00
WHERE employee_id = 1;

-- Delete a row from the employees table
DELETE FROM employees
WHERE employee_id = 2;

-- Delete rows based on a condition
DELETE FROM employees
WHERE salary < 60000;

CREATE TABLE departments (
    department_id INT PRIMARY KEY AUTO_INCREMENT,
    department_name VARCHAR(50)
);

-- Insert data into the departments table
INSERT INTO departments (department_name)
VALUES ('HR'), ('Engineering'), ('Sales');

-- Create a table with a foreign key reference
CREATE TABLE employee_departments (
    employee_id INT,
    department_id INT,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id),
    FOREIGN KEY (department_id) REFERENCES departments(department_id)
);

-- Insert data into the employee_departments table
INSERT INTO employee_departments (employee_id, department_id)
VALUES (1, 2), (2, 1), (3, 3);

-- Select data using a join
SELECT e.first_name, e.last_name, d.department_name
FROM employees e
JOIN employee_departments ed ON e.employee_id = ed.employee_id
JOIN departments d ON ed.department_id = d.department_id;

-- Create an index on the email column of the employees table
CREATE INDEX idx_email ON employees(email);

-- Use the index in a query (implicitly used by the database engine)
SELECT * FROM employees WHERE email = 'john.doe@example.com';

